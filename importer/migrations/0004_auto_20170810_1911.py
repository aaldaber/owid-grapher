# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-08-10 19:11
from __future__ import unicode_literals

from django.db import migrations


def fix_un_wpp_long_country_names(apps, schema_editor):
    # This migration fixes long country names from the UN WPP dataset
    # These long names include the country or region explanation in the country name
    # This migration will move the explanation to a separate field in the db
    Entity = apps.get_model('grapher_admin', 'Entity')
    Dataset = apps.get_model('grapher_admin', 'Dataset')
    DataValue = apps.get_model('grapher_admin', 'DataValue')
    Variable = apps.get_model('grapher_admin', 'Variable')
    un_wpp_entity_ids = DataValue.objects.filter(
        fk_var_id__in=Variable.objects.filter(fk_dst_id__in=Dataset.objects.filter(namespace='unwpp'))).values(
        'fk_ent_id').distinct()
    un_wpp_entity_ids = [each['fk_ent_id'] for each in un_wpp_entity_ids]
    all_un_wpp_entities = Entity.objects.filter(pk__in=un_wpp_entity_ids)
    for each in all_un_wpp_entities:
        if each.created_at:
            if each.created_at.year == 2017:  # filtering by year so that we don't change entity names that might be used in existing charts
                splitted_names = each.name.split(',', 1)
                if len(splitted_names) > 0:
                    each.name = splitted_names[0].strip()
                    each.additional_info = splitted_names[1].strip()
                    each.save()


class Migration(migrations.Migration):

    dependencies = [
        ('importer', '0003_auto_20170810_1754'),
        ('grapher_admin', '0006_entity_additional_info'),
    ]

    operations = [
        migrations.RunPython(fix_un_wpp_long_country_names),
    ]
